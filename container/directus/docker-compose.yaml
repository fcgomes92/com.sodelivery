services:
  directus:
    container_name: directus
    image: directus/directus
    build:
      context: ./
    env_file:
      - ".env"
    networks:
      - directus_net
    ports:
      - 8055:8055
    volumes:
      - ./data/uploads:/directus/uploads
      - ./data/extensions:/directus/extensions
    depends_on:
      directus_db:
        condition: service_healthy
    environment:
      KEY: $DIRECTUS_KEY
      SECRET: $DIRECTUS_SECRET
      ADMIN_EMAIL: $DIRECTUS_EMAIL
      ADMIN_PASSWORD: $DIRECTUS_PASS
      CORS_ENABLED: 'true'
      CORS_ORIGIN: $DIRECTUS_CORS_ORIGIN
      PUBLIC_URL: $DIRECTUS_PUBLIC_URL
      DB_PASSWORD: $DIRECTUS_DB_PASSWORD
      DB_USER: $DIRECTUS_DB_USER
      DB_CLIENT: $DIRECTUS_DB_CLIENT
      DB_HOST: $DIRECTUS_DB_HOST
      DB_PORT: $DIRECTUS_DB_PORT
      DB_DATABASE: $DIRECTUS_DB_DATABASE
  directus_db:
    env_file:
      - ".env"
    build:
      context: ./
    container_name: directus_db
    image: postgis/postgis:13-3.4-alpine
    networks:
      - directus_net
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: $DIRECTUS_DB_PASSWORD
      POSTGRES_USER: $DIRECTUS_DB_USER
      POSTGRES_DB: $DIRECTUS_DB_DATABASE
    volumes:
      - ./entrypoints:/docker-entrypoint-initdb.d
      - ./data/database:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "--host=localhost", "--username=${DIRECTUS_DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  directus_net:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1300

volumes:
  directus_database:
